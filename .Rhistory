is.character(example$x)
devtools::load_all(".")
mic_roc(data = example, x = "x", y = "y", tr = "trat")
mic_roc(x = example$x, y = example$y, tr = example$trat)
mic_roc(data = example, x = example$x, y = example$y, tr = example$trat)
mic_roc(data = example, x = "x", y = "z", tr = "trat")
mic_pred(x = example$x, y = example$y, tr = example$trat)
devtools::load_all(".")
devtools::load_all(".")
mic_pred(x = example$x, y = example$y, tr = example$trat)
mic_pred(data = example, x = "x", y = "y", tr = "trat")
mic_pred(data = example, x = "x", y = "z", tr = "trat")
mic_pred(data = example, x = "x", y = "y", tr = "trat")
mic_pred(data = example, x = example$x, y = example$y, tr = example$trat)
?sample
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colmeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dat <- example[sample(1:dim(example)[1], dim(example)[1], replace=TRUE),]
colMeans(dat)
dim(example)[1]
1:dim(example)[1]
?boot
?boot::boot
devtools::load_all(".")
nitems <- 10
example$x <- rowSums(example[,1:nitems])                 # sumscore T1
example$y <- rowSums(example[,(nitems+1):(2*nitems)])    # sumscore T2
bootCI(data = example, fun = mic_roc, x = "x", y = "y", tr = "trat")
data <- example
boot.fun <- function(data,x) {
mic_roc(data[x,], x = "x", y = "y", tr = "trat")
}
b <- 1000
res1a <- boot::boot(data,boot.fun,b)
res1a <- boot::boot(data,boot.fun, R = b, sim = "parametric")
res1a
BCI <-  quantile(res1a$t,c((alpha)/2,(1-alpha)+((alpha)/2)), na.rm=TRUE)    # Bootstrapped confidence interval of Light's kappa
names(BCI) <- c("lower", "upper")
BCI
alpha <- 0.05
BCI <-  quantile(res1a$t,c((alpha)/2,(1-alpha)+((alpha)/2)), na.rm=TRUE)    # Bootstrapped confidence interval of Light's kappa
names(BCI) <- c("lower", "upper")
BCI
res1a <- boot::boot(data,boot.fun, R = b)
boot.fun <- function(data,x) {
mic_roc(data[x,], x = "x", y = "y", tr = "trat")
}
res1a <- boot::boot(data,boot.fun,b, x = "x", y = "y", tr = "trat")
debug(boot)
debug(boot::boot)
res1a <- boot::boot(data,boot.fun, R = b)
res1a <- boot::boot(data,boot.fun, R = b)
t.star
undebug(boot::boot)
devtools::load_all(".")
bootCI(data = example, fun = mic_roc, x = "x", y = "y", tr = "trat")
devtools::load_all(".")
bootCI(data = example, fun = mic_roc, x = "x", y = "y", tr = "trat")
devtools::load_all(".")
bootCI(data = example, fun = mic_roc, x = "x", y = "y", tr = "trat")
library(rsample)
install.packages("rsample")
load("data/example.rda")
data <- example
boots <- bootstraps(data, times = 2000, apparent = TRUE)
boots
library(rsample)
#rsample bootstraps
boots <- bootstraps(data, times = 2000, apparent = TRUE)
boots
?mic_rox
?mic_roc
devtools::load_all(".")
?mic_roc
boot_fun <- function(splits, x, y, tz){
mic_roc(splits, x = x, y = y, tz = tz)
}
boot_models <-
boots %>%
mutate(mic = map(splits, boot_fun))
library(dplyr)
library(tidyr)
boot_models <-
boots %>%
mutate(mic = map(splits, boot_fun))
?map
library(purrr)
boot_models <-
boots %>%
mutate(mic = map(splits, boot_fun))
boot_models <-
boots %>%
mutate(mic = map(splits, mic_roc, x = "x", y = "y", tr = "trat"))
boot_models <-
boots %>%
mutate(mic = map(., mic_roc, x = "x", y = "y", tr = "trat"))
names(example)
nitems <- 10
example$x <- rowSums(example[,1:nitems])                 # sumscore T1
example$y <- rowSums(example[,(nitems+1):(2*nitems)])    # sumscore T2
data <-example
boots <- bootstraps(data, times = b, apparent = TRUE)
boots
boot_fun <- function(splits, x = "x", y = "y", tr = "trat"){
mic_roc(splits, x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map(., mic_roc, x = "x", y = "y", tr = "trat"))
b <- 1000
boots <- bootstraps(data, times = b, apparent = TRUE)
boots
# fit_nls_on_bootstrap <- function(split) {
#  nls(mpg ~ k / wt + b, analysis(split), start = list(k = 1, b = 0))
#}
boot_fun <- function(splits, x = "x", y = "y", tr = "trat"){
mic_roc(splits, x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map(., mic_roc, x = "x", y = "y", tr = "trat"))
names(data)
names(boots[[1]])
boot_models <-
boots %>%
mutate(mic = map(splits, mic_roc, x = "x", y = "y", tr = "trat"))
boot_fun <- function(splits, x = "x", y = "y", tr = "trat"){
mic_roc(splits, x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map(splits, boot_fun))
mic_roc
boot_fun <- function(splits, x = "x", y = "y", tr = "trat"){
mic_roc(splits, x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map(splits, boot_fun))
names(data)
names(boots)
boots %>%
mutate(n = map(. colnames))
boots %>%
mutate(n = map(. ,colnames))
boots %>%
mutate(n = map(. , mic_roc))
boots %>%
mutate(n = map(. , mic_roc, x = "x", y ="y", tr ="trat"))
boots
?bootstraps
boots %>%
mutate(mic = map.dbl(splits, boot_fun))
boot_models <-
boots %>%
mutate(mic = map_dbl(splits, boot_fun))
boot_fun <- function(splits, x = "x", y = "y", tr = "trat"){
mic_roc(splits, x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map_dbl(splits, boot_fun))
mic_roc(example, x = x, y = y, tr = tr)
mic_roc(example, x = "x", y = "y", tr = "tr")
names(example)
x <- "x"
y <-
"y"
tr <- "tr"
tr <- "trat"
mic_roc(example, x = "x", y = "y", tr = "trat")
boots %>%
mutate(mic = map_dbl(splits, function(x){
mic_roc(x, x = "x", y = "y", tr = "trat")
}))
boots %>%
mutate(mic = map_dbl(splits, function(data){
mic_roc(data, x = "x", y = "y", tr = "trat")
}))
boots <- bootstraps(data, times = b, apparent = TRUE)
boots
boots$splits
boots$splits[[1]]
as.data.frame(boots$splits[[1]])
#}
boot_fun <- function(data, x = "x", y = "y", tr = "trat"){
mic_roc(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_models <-
boots %>%
mutate(mic = map_dbl(splits, boot_fun))
boot_models
?int_pctl
boot_mic_roc <- function(data, x = "x", y = "y", tr = "trat"){
mic_roc(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_mic_pred <- function(data, x = "x", y = "y", tr = "trat"){
mic_pred(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_mics <-
boots %>%
mutate(mic_roc = map_dbl(splits, boot_mic_roc),
mic_pred = map_dbl(splits, boot_mic_pred))
boot_mics %>%
int_pctl(mic_roc, alpha = 0.05)
int_pctl(boot_mics, mic_roc, alpha = 0.05)
boot_mics <-
boots %>%
mutate(mic_roc = tidy(map_dbl(splits, boot_mic_roc)),
mic_pred = map_dbl(splits, boot_mic_pred))
boot_mic_roc <- function(data, x = "x", y = "y", tr = "trat"){
tibble(
term = "mic_roc",
estimate = mic_roc(as.data.frame(data), x = x, y = y, tr = tr),
std.err = NA_real_
}
boot_mic_pred <- function(data, x = "x", y = "y", tr = "trat"){
mic_pred(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_mics <-
boots %>%
mutate(mic_roc = map_dbl(splits, boot_mic_roc),
mic_pred = map_dbl(splits, boot_mic_pred))
int_pctl(boot_mics, mic_roc, alpha = 0.05)
boot_mics
boot_mic_roc <- function(data, x = "x", y = "y", tr = "trat"){
tibble(
term = "mic_roc",
estimate = mic_roc(as.data.frame(data), x = x, y = y, tr = tr),
std.err = NA_real_)
}
boot_mic_pred <- function(data, x = "x", y = "y", tr = "trat"){
mic_pred(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_mics <-
boots %>%
mutate(mic_roc = map_dbl(splits, boot_mic_roc),
mic_pred = map_dbl(splits, boot_mic_pred))
int_pctl(boot_mics, mic_roc, alpha = 0.05)
boot_mic_roc <- function(split, x = "x", y = "y", tr = "trat"){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_roc(data = dat, x = x, y = y, tr = tr),
std.err = NA_real_)
}
boot_mic_pred <- function(data, x = "x", y = "y", tr = "trat"){
mic_pred(as.data.frame(data), x = x, y = y, tr = tr)
}
boot_mics <-
boots %>%
mutate(mic_roc = map_dbl(splits, boot_mic_roc),
mic_pred = map_dbl(splits, boot_mic_pred))
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map_dbl(splits, boot_mic_pred))
int_pctl(boot_mics, mic_roc, alpha = 0.05)
View(boot_mics)
int_bca(boot_mics, mic_roc, alpha = 0.05)
int_bca(boot_mics, mic_roc, alpha = 0.05)
int_bca(boot_mics, mic_roc, alpha = 0.05, fn = boot_mic_roc)
int_bca(boot_mics, mic_roc, alpha = 0.05, boot_mic_roc)
boot_mic_roc <- function(split, x = "x", y = "y", tr = "trat", ...){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_roc(data = dat, x = x, y = y, tr = tr),
std.err = NA_real_)
}
boot_mic_roc <- function(split, x = "x", y = "y", tr = "trat"){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_roc(data = dat, x = x, y = y, tr = tr),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred))
int_pctl(boot_mics, mic_roc, alpha = 0.05)
int_bca(boot_mics, mic_roc, alpha = 0.05, .fn = boot_mic_roc)
boot_mic_roc <- function(split, x = "x", y = "y", tr = "trat",...){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_roc(data = dat, x = x, y = y, tr = tr),
std.err = NA_real_)
}
int_bca(boot_mics, mic_roc, alpha = 0.05, .fn = boot_mic_roc)
int_pctl(boot_mics, mic_pred, alpha = 0.05)
boot_mic_pred <- function(split, x = "x", y = "y", tr = "trat"){
dat <- analysis(split)
tibble(
term = "mic_pred",
estimate = mic_pred(data = dat, x = x, y = y, tr = tr),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred))
int_pctl(boot_mics, mic_pred, alpha = 0.05)
int_pctl(boot_mics, mic_roc, alpha = 0.05)
model <- '
# Factors
F1 =~ a1*v1_1+a2*v1_2+a3*v1_3+a4*v1_4+a5*v1_5+a6*v1_6+a7*v1_7+a8*v1_8+
a9*v1_9+a10*v1_10+trat
F2 =~ a1*v2_1+a2*v2_2+a3*v2_3+a4*v2_4+a5*v2_5+a6*v2_6+a7*v2_7+a8*v2_8+
a9*v2_9+a10*v2_10+trat
''
model <- '
# Factors
F1 =~ a1*v1_1+a2*v1_2+a3*v1_3+a4*v1_4+a5*v1_5+a6*v1_6+a7*v1_7+a8*v1_8+
a9*v1_9+a10*v1_10+trat
F2 =~ a1*v2_1+a2*v2_2+a3*v2_3+a4*v2_4+a5*v2_5+a6*v2_6+a7*v2_7+a8*v2_8+
a9*v2_9+a10*v2_10+trat
'
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", model = model){
dat <- analysis(split)
reliability <- tr_reliability(dat, model = model, modification = FALSE)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred)
mic_adjust = map(splits, boot_mic_adjust))
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
mic_adjust = map(splits, boot_mic_adjust))
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", model = model){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability =  tr_reliability(dat, model = model, modification = FALSE)),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
mic_adjust = map(splits, boot_mic_adjust))
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", model = model){
dat <- analysis(split)
bootrel =  tr_reliability(dat, model = model, modification = FALSE)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = bootrel),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
mic_adjust = map(splits, boot_mic_adjust))
boot_tr_rel <- function(split, model = model){
dat <- analysis(split)
tr_reliability(dat, model = model, modification = FALSE)
}
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", reliability){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
bootrel = map_dbl(splits, boot_tr_rel),
mic_adjust = map(splits, boot_mic_adjust, reliability = bootrel)
)
model1 <- model
model1
boot_tr_rel <- function(split, model){
dat <- analysis(split)
tr_reliability(dat, model = model, modification = FALSE)
}
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", reliability){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
bootrel = map_dbl(splits, boot_tr_rel, model = model1),
mic_adjust = map(splits, boot_mic_adjust, reliability = bootrel)
)
int_pctl(boot_mics, mic_roc, alpha = 0.05)
int_pctl(boot_mics, mic_pred, alpha = 0.05)
int_pctl(boot_mics, mic_adjust, alpha = 0.05)
boot_tr_rel <- function(split, model1 = model){
dat <- analysis(split)
tr_reliability(dat, model = model1, modification = FALSE)
}
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", model1 = model){
dat <- analysis(split)
reliability <- boot_tr_rel(dat, model = model1)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
# bootrel = map_dbl(splits, boot_tr_rel, model1 = model),
mic_adjust = map(splits, boot_mic_adjust)#, reliability = bootrel)
)
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", model1 = model){
dat <- analysis(split)
reliability <- boot_tr_rel(dat, model = model1, modification = FALSE)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
# bootrel = map_dbl(splits, boot_tr_rel, model1 = model),
mic_adjust = map(splits, boot_mic_adjust)#, reliability = bootrel)
)
start <- Sys.time()
boot_tr_rel <- function(split, model1 = model){
dat <- analysis(split)
tr_reliability(dat, model = model1, modification = FALSE)
}
boot_mic_adjust <- function(split, x = "x", y = "y", tr = "trat", reliability){
dat <- analysis(split)
tibble(
term = "mic_roc",
estimate = mic_adjust(data = dat, x = x, y = y, tr = tr, reliability = reliability),
std.err = NA_real_)
}
boot_mics <-
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc),
mic_pred = map(splits, boot_mic_pred),
bootrel = map_dbl(splits, boot_tr_rel, model1 = model),
mic_adjust = map(splits, boot_mic_adjust, reliability = bootrel)
)
Sys.time()-start
devtools::load_all(".")
nitems <- 10
example$x <- rowSums(example[,1:nitems])                 # sumscore T1
example$y <- rowSums(example[,(nitems+1):(2*nitems)])    # sumscore T2
model <- '
# Factors
F1 =~ a1*v1_1+a2*v1_2+a3*v1_3+a4*v1_4+a5*v1_5+a6*v1_6+a7*v1_7+a8*v1_8+
a9*v1_9+a10*v1_10+trat
F2 =~ a1*v2_1+a2*v2_2+a3*v2_3+a4*v2_4+a5*v2_5+a6*v2_6+a7*v2_7+a8*v2_8+
a9*v2_9+a10*v2_10+trat
'
start <- Sys.time()
bootCImic(example, model = model)
Sys.time()-start
boots %>%
mutate(mic_roc = map(splits, boot_mic_roc)) %>%
int_pctl(., mic_roc, alpha = 0.05)
boots %>%
mic_pred = map(splits, boot_mic_pred)) %>%
int_pctl(boot_mics, mic_pred, alpha = 0.05)
boots %>%
mutate(mic_pred = map(splits, boot_mic_pred)) %>%
int_pctl(boot_mics, mic_pred, alpha = 0.05)
boots %>%
mutate(mic_pred = map(splits, boot_mic_pred)) %>%
int_pctl(., mic_pred, alpha = 0.05)
devtools::load_all(".")
start <- Sys.time()
bootCImic(example, mic = "roc")
Sys.time()-start
start <- Sys.time()
bootCImic(example, mic = c("roc", "pred"))
Sys.time()-start
devtools::document()
?analysis
